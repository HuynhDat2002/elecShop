// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
    binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
model Test {
  id Int @id @default(autoincrement())
  name String
}


//cart
model Cart{
  id Int @id @default(autoincrement())
  customerId Int @unique
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  cartLineItems CartLineItems[]
}

model CartLineItems{
  id Int @id @default(autoincrement())
  // customerId Int
  productId Int
  cartId Int 
  cart Cart @relation(fields:[cartId], references:[id],onDelete: Cascade, onUpdate: Cascade)
  itemName String
  variant String
  qty Int
  price Float
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
}

// order
model Order{
    id Int @id @default(autoincrement())
    orderNumber Int @unique
    customerId Int
    amount Float
    status String
    txnId String?
    createdAt        DateTime           @default(now())
    updatedAt        DateTime           @updatedAt
    orderLineItems OrderLineItems[]
}

model OrderLineItems{
  id Int @id @default(autoincrement())
  orderId Int
  order Order @relation(fields:[orderId], references:[id],onDelete: Cascade, onUpdate: Cascade)
  productId Int
  itemName String
  qty Int
  price Float
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
}






